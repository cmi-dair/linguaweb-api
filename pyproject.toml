[tool.poetry]
name = "linguaweb_api"
version = "0.1.0"
description = "A beautiful description."
authors = ["Reinder Vos de Wael <reinder.vosdewael@childmind.org>"]
license = ""
readme = "README.md"
packages = [{include = "linguaweb_api", from = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.105.0"
pydantic-settings = "^2.1.0"
uvicorn = "^0.24.0.post1"
sqlalchemy = "^2.0.23"
openai = "^1.6.0"
psycopg2-binary = "^2.9.9"
boto3 = "^1.34.11"
python-multipart = "^0.0.6"
ffmpeg-python = "^0.2.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
mypy = "^1.7.1"
pre-commit = "^3.6.0"
pytest-cov = "^4.1.0"
ruff = "^0.1.8"
httpx = "^0.25.2"
pytest-mock = "^3.12.0"
pytest-asyncio = "^0.23.2"
moto = {extras = ["all"], version = "^4.2.12"}
vulture = "^2.10"
pytest-env = "^1.1.3"

[tool.poetry.group.docs.dependencies]
pdoc = "^14.2.0"

[tool.poetry.extras]
docs = ["pdoc"]

[tool.pytest.ini_options]
pythonpath = [
  "src"
]
env = [
  "LWAPI_SQLITE_FILE=tests/test.sqlite"
]

[tool.mypy]
ignore_missing_imports = true

[tool.ruff]
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv"
]
line-length = 88
indent-width = 4
src = ["src"]
target-version = "py311"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "ANN101",  # Self should never be type annotated.
  "ANN102",  # cls should never be type annotated.
  "B008"  # Allow function call in arguments; this is common in FastAPI.
]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.per-file-ignores]
"tests/**/*.py" = [
  "S101",  # Allow assets
  "ARG",  # Unused arguments are common in tests (fixtures).
  "FBT",  # Allow positional booleans
  "SLF001",  # Allow private member access.
  "INP001"  # No need for namespace packages in tests.
]
"src/**/models.py" = [
  "A003"  # Allow id as a field name.
]
"src/**/schemas.py" = [
  "A003"  # Allow id as a field name.
]

[tool.vulture]
make_whitelist = true
min_confidence = 80
paths = ["src"]
sort_by_size = true
verbose = false

[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"
